#!/usr/bin/env bash

function run {
  if ! pgrep $1 ;
  then
    $@&
  fi
}

#Autostart applications
pkill -u $USER '^compton$'
compton  --config $HOME/.config/herbstluftwm/compton.conf &
/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &

xsetroot -solid '#000000'
xsetroot -cursor_name left_ptr &

#keybindings are in config of sxhkd - interchangeable with other TWM
wal -R &
run variety &
xinput set-prop 13 302 1 &
run dunst &
numlockx on &
nitrogen --restore &
dropbox &

#herbstluftwm start
hc() {
    herbstclient "$@"
}

hc emit_hook reload

# KEYBINDINGS

# remove all existing keybindings
hc keyunbind --all

Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-x quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-q close
hc keybind $Mod-q close

hc keybind Shift-Print spawn flameshot gui
hc keybind $Mod-Return spawn kitty
hc keybind $Mod-d spawn rofi -show run

# MOVEMENTS

# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right

# moving clients to ... on single Monitor
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# moving clients to ... on dual monitor

hc keybind $Mod-Shift-Left chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
hc keybind $Mod-Shift-Down chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
hc keybind $Mod-Shift-Up chain , lock , shift_to_monitor -r , focus_monitor -r , unlock
hc keybind $Mod-Shift-Right chain , lock , shift_to_monitor -r , focus_monitor -r , unlock

# FRAMES

# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode
# remove frame
hc keybind $Mod-r remove

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# TAGS or WORKSPACES

#names to display in menu
tag_names=( {1..10} )


tag_keys=( "1" "2" "3" "4" "5" "6" "7" "8" "9" "0" )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    # horizontal tiling as standard
    hc set_layout horizontal
    hc set default_frame_layout 1
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" chain , move_index "$i" , use_index "$i"
    fi
done

# layouting
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1


# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus on ...
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind Control-Mod1-Left    focus left
hc keybind Control-Mod1-Up      focus up
hc keybind Control-Mod1-Right   focus right
hc keybind Control-Mod1-Down    focus down
hc keybind Mod1-Tab         use_index +1 --skip-visible
hc keybind Mod1-Shift-Tab   use_index -1 --skip-visible
#hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

#reset prior to setting the theme
hc attr theme.reset 1

# Attribute
hc attr theme.active.color '#FFFFFF'
hc attr theme.active.inner_color '#4c566a'
hc attr theme.active.outer_color '#FFFFFF'
hc attr theme.background_color '#4c566a'
hc attr theme.border_width 5
hc attr theme.floating.border_width 5
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.inner_color black
hc attr theme.inner_width 1
hc attr theme.normal.color '#4c566a'
hc attr theme.urgent.color orange

# Set
hc set always_show_frame 1
hc set focus_follows_mouse 1
hc set frame_border_active_color '#ffffff'
hc set frame_border_normal_color '#4c566a'
hc set frame_bg_normal_color '#4c566a'
hc set frame_bg_active_color '#ffffff'
hc set frame_border_width 5
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_gap 8
hc set frame_padding 0
hc set mouse_recenter_gap 0
hc set smart_frame_surroundings 1
hc set smart_window_surroundings 0
hc set tree_style '╾│ ├└╼─┐'
hc set window_gap 10


# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on pseudotile=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# unlock, just to be sure
hc unlock

hc set_monitors 1920x1050+0+30 1920x1080+1920+0

#room for polybar on both monitors
#single polybar at top
hc pad 0 0
hc pad 1 40


#launching polybar
~/.config/polybar/launch.sh
